# Che-Theia workflow
# matrix jobs with alpine and ubi8

dist: focal
os: linux
cache: yarn
git:
  depth: false 

language: node_js
node_js: "12"

install: skip

stages:
  - publish
  - Build & Publish 'next'
  - Check a Theia branch
  - release

env: 
  global:
  - THEIA_GITHUB_REPO = eclipse-theia/theia
  - THEIA_BRANCH = master

jobs:
  include: 
    - stage: Linting 
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      arch: amd64
      os: linux
      env: STEP=LINT
      install: npm install eslint@4.7.x lerna
      script: echo "Lintline step"
    - stage: Node Build
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      arch: amd64
      os: linux
      script: yarn
    #- name: Node Build #name is needed to be included everywhere or else yarn test is executed(default behaviour) 
    #  if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
    #  arch: arm64
    #  os: linux
    #  script: yarn
    #- name: Node Build
    #  if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
    #  arch: ppc64le
    #  os: linux
    #  script: yarn
    - name: Node Build
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      arch: s390x
      os: linux
      script: yarn
    - stage: Docker Build
      name: alpine 
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      arch: amd64
      os: linux
      script: 
      - echo "Alpine job runs here"
      - docker image prune -a -f
      - docker pull quay.io/prabhav/che-theia-dev:next
      - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine
    #- 
    #  if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
    #  arch: arm64
    #  os: linux
    #  script: 
    #  - echo "Alpine job runs here"
    #  - docker image prune -a -f
    #  - docker pull quay.io/prabhav/che-theia-dev:next
    #  - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
    #  - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine
    #- 
    #  if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
    #  arch: ppc64le
    #  os: linux
    #  script: 
    #  - echo "Alpine job runs here"
    #  - docker image prune -a -f
    #  - docker pull quay.io/prabhav/che-theia-dev:next
    #  - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
    #  - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine
    - 
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      arch: s390x
      os: linux
      env:
      - CDN_PREFIX = https://static.developers.redhat.com/che/theia_artifacts/
      - MONACO_CDN_PREFIX = https://cdn.jsdelivr.net/npm/
      script: 
      - echo "Alpine job runs here"
      - docker image prune -a -f
      - docker pull quay.io/prabhav/che-theia-dev:next
      - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine
    - stage: Docker build
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      name: ubi8
      arch: amd64
      os: linux
      env:
      - CDN_PREFIX = https://static.developers.redhat.com/che/theia_artifacts/
      - MONACO_CDN_PREFIX = https://cdn.jsdelivr.net/npm/
      script: 
      - echo "ubi8 job runs here"
      - docker image prune -a -f
      - docker pull quay.io/prabhav/che-theia-dev:next
      - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.ubi8
    # - 
    #   if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
    #   arch: arm64
    #   os: linux
    #   script: 
    #   - echo "ubi8 job runs here"
    #   - docker image prune -a -f
    #   - docker pull quay.io/prabhav/che-theia-dev:next
    #   - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
    #   - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.ubi8
    # - 
    #   if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
    #   arch: ppc64le
    #   os: linux
    #   script: 
    #   - echo "ubi8 job runs here"
    #   - docker image prune -a -f
    #   - docker pull quay.io/prabhav/che-theia-dev:next
    #   - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
    #   - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.ubi8
    - 
      if: type = pull_request  # To be chnged later to =pr, marked != for testing purpose
      arch: s390x
      os: linux
      script: 
      - echo "ubi8 job runs here"
      - docker image prune -a -f
      - docker pull quay.io/prabhav/che-theia-dev:next
      - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.ubi8

    # - stage: publish
    #   if: type = cron
    #   env:
    #     - PROJECT=CoreCron METHOD=pod-lib-lint
    #   script:
    - stage: Build & Publish 'next'
      if: type = push AND branch = travis
      arch: amd64
      os: linux
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      #- docker login quay.io -u="$QUAY_USERNAME " -p="$QUAY_PASSWORD"
      #- docker image prune -a -f
      #- ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --push "${TRAVIS_CPU_ARCH}"
      #- printf "//registry.npmjs.org/:_authToken=${{ secrets.CHE_NPM_AUTH_TOKEN }}\n" >> ~/.npmrc
      #- yarn publish:next
    - 
      if: type = push AND branch = travis
      arch: s390x
      os: linux
      script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker login quay.io -u="$QUAY_USERNAME " -p="$QUAY_PASSWORD"
      - docker image prune -a -f
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --push "${TRAVIS_CPU_ARCH}"
      #- printf "//registry.npmjs.org/:_authToken=${{ secrets.CHE_NPM_AUTH_TOKEN }}\n" >> ~/.npmrc
      #- yarn publish:next
    - stage: Check a Theia branch
      if: type = api
      arch: amd64
      os: linux
      language: node_js
      node_js: "12"
      script:
      - docker image prune -a -f
      - docker pull quay.io/prabhav/che-theia-dev:next
      - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --build-args:THEIA_GITHUB_REPO=${THEIA_GITHUB_REPO} --branch:${THEIA_BRANCH}
    - 
      name: Check a Theia branch
      if: type = api
      arch: s390x
      os: linux
      language: node_js
      node_js: "12"
      script:
      - docker image prune -a -f
      - docker pull quay.io/prabhav/che-theia-dev:next
      - docker tag quay.io/prabhav/che-theia-dev:next prabhav/che-theia-dev:next
      - ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --build-args:THEIA_GITHUB_REPO=${THEIA_GITHUB_REPO} --branch:${THEIA_BRANCH}

    - stage: Release
      name: Check existing tags
      if: type = api AND branch = master
      arch: amd64
      os: linux
      language: node_js
      node_js: "12"
      script:
      - |  
        set +e
        RECREATE_TAGS=${{ github.event.inputs.forceRecreateTags }}
        VERSION=${{ github.event.inputs.version }}
        EXISTING_TAG=$(git ls-remote --exit-code origin refs/tags/${VERSION})
        if [[ -n ${EXISTING_TAG} ]]; then
          if [[ ${RECREATE_TAGS} == "true" ]]; then
            echo "[INFO] Removing tag for ${VERSION} version. New tag will be recreated during release."
            git push origin :$VERSION
          else
            echo "[ERROR] Cannot proceed with release - tag ${EXISTING_TAG} already exists."
            exit 1
          fi
        else
          echo "[INFO] No existing tags detected for $VERSION"
        fi
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker login quay.io -u="$QUAY_USERNAME " -p="$QUAY_PASSWORD"
    -  
      name: Prepare release
      arch: amd64
      os: linux
      script:
      - |  
        git config --global user.name "Mykhailo Kuznietsov"
        git config --global user.email "mkuznets@redhat.com"
        export GITHUB_TOKEN=${{ secrets.CHE_BOT_GITHUB_TOKEN }}
        export AKAMAI_CHE_AUTH=${{ secrets.AKAMAI_CHE_AUTH }}
        ./make-release.sh --version ${{ github.event.inputs.version }}


  # Upload code coverage results to codecov.io, see https://github.com/codecov/codecov-bash for more information
  #- bash <(curl -s https://codecov.io/bash) 
